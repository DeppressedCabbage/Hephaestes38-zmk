#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

&ext_power EXT_POWER_ON_CMD

&sk {
    release-after-ms = <500>;
    quick-release;
};

/{
    combos {
        compatible = "zmk,combos";
        combo_Nav_Layer {
            timeout-ms = <50>;
            key-positions = <13 34>;
            bindings = <&tog 1>;
        };
        combo_NUM_Layer {
            timeout-ms = <50>;
            key-positions = <18 37>;
            bindings = <&tog 2>;
        };
        combo_ESC {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp ESC>;
        };
        combo_Enter {
            timeout-ms = <50>;
            key-positions = <17 18 19>;
            bindings = <&kp ENTER>;
        };
        combo_Windows {
            timeout-ms = <50>;
            key-positions = <12 14>;
            bindings = <&kp LEFT_GUI>;
        };
        combo_Delete {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp DEL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer { //layer 0
            bindings = <
                            &kp F   &kp P   &kp D   &kp L   &kp X       &kp BSPC    &kp U           &kp O           &kp Y       &kp B
                &kp TAB     &kp S   &kp N   &kp T   &kp H   &kp K       &kp COMMA   &kp A           &kp E           &kp I       &kp C   &kp Q
                &kp LCTRL   &kp V   &kp W   &kp G   &kp M   &kp J       &kp MINUS   &mt EXCL DOT    &kp SQT         &kp SEMI    &kp Z   &kp LALT
                                                    &kp R  &caps_word    &sk LSHIFT  &kp SPACE
            >;
        };
        Nav_Layer { //layer 2
            bindings = <
                            &none   &none   &none   &none   &none       &kp DEL     &kp PG_UP       &kp UP          &kp PG_DN   &none
                &trans      &none   &none   &none   &none   &none       &none       &kp LEFT        &kp DOWN        &kp RIGHT   &none   &none
                &trans      &none   &none   &none   &none   &none       &none       &none           &none           &none       &none   &none
                                                &kp LSHIFT  &none       &to 0       &none
            >;
        };
        Number_Layer { //layer 3
            bindings = <
                            &none       &kp AT_SIGN &kp LBKT    &kp RBKT    &kp CARET   &kp BSPC        &kp N7      &kp N8      &kp N9  &kp EQUAL
                &trans      &kp EXCL    &kp QMARK   &kp LPAR    &kp RPAR    &kp PIPE    &kp STAR        &kp N4      &kp N5      &kp N6  &kp MINUS   &kp ENTER
                &trans      &kp LT      &kp GT      &kp LBRC    &kp RBRC    &kp TILDE   &kp N0          &kp N1      &kp N2      &kp N3  &kp FSLH    &trans
                                                                &kp LSHIFT  &kp DOT     &to 0           &trans
            >;
        }; 
    };
};
